{"ast":null,"code":"import { fetchProductsBegin, fetchProductsSuccess, fetchProductsFailure } from './productActions';\nexport function fetchProducts() {\n  return dispatch => {\n    dispatch(fetchProductsBegin());\n    return fetch(\"/products\").then(handleErrors).then(res => res.json()).then(json => {\n      dispatch(fetchProductsSuccess(json.products));\n      return json.products;\n    }).catch(error => dispatch(fetchProductsFailure(error)));\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/home/rexweb/Desktop/rredux/datafetch/src/FetchProducts.js"],"names":["fetchProductsBegin","fetchProductsSuccess","fetchProductsFailure","fetchProducts","dispatch","fetch","then","handleErrors","res","json","products","catch","error","response","ok","Error","statusText"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,oBAA5B,EAAiDC,oBAAjD,QAA6E,kBAA7E;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACA,WAAOK,KAAK,CAAC,WAAD,CAAL,CACJC,IADI,CACCC,YADD,EAEJD,IAFI,CAECE,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFR,EAGJH,IAHI,CAGCG,IAAI,IAAI;AACZL,MAAAA,QAAQ,CAACH,oBAAoB,CAACQ,IAAI,CAACC,QAAN,CAArB,CAAR;AACA,aAAOD,IAAI,CAACC,QAAZ;AACD,KANI,EAOJC,KAPI,CAOEC,KAAK,IAAIR,QAAQ,CAACF,oBAAoB,CAACU,KAAD,CAArB,CAPnB,CAAP;AAQD,GAVD;AAWD,C,CAED;;AACA,SAASL,YAAT,CAAsBM,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,SAAOH,QAAP;AACD","sourcesContent":["import {fetchProductsBegin, fetchProductsSuccess,fetchProductsFailure } from './productActions';\n\nexport function fetchProducts() {\n    return dispatch => {\n      dispatch(fetchProductsBegin());\n      return fetch(\"/products\")\n        .then(handleErrors)\n        .then(res => res.json())\n        .then(json => {\n          dispatch(fetchProductsSuccess(json.products));\n          return json.products;\n        })\n        .catch(error => dispatch(fetchProductsFailure(error)));\n    };\n  }\n  \n  // Handle HTTP errors since fetch won't.\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }"]},"metadata":{},"sourceType":"module"}