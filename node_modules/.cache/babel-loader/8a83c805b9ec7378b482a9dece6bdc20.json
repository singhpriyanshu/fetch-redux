{"ast":null,"code":"import { fetchProductsBegin, fetchProductsSuccess, fetchProductsFailure } from './productActions';\nexport function fetchProducts() {\n  return dispatch => {\n    dispatch(fetchProductsBegin()); //   return fetch(\"/products\")\n    //     .then(handleErrors)\n    //     .then(res => res.json())\n    //     .then(json => {\n    //       dispatch(fetchProductsSuccess(json.products));\n    //       return json.products;\n    //     })\n    //     .catch(error => dispatch(fetchProductsFailure(error)));\n    // };\n    // return dispatch(fetchProductsSuccess(['h','c','j']));;\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/home/rexweb/Desktop/rredux/datafetch/src/FetchProducts.js"],"names":["fetchProductsBegin","fetchProductsSuccess","fetchProductsFailure","fetchProducts","dispatch","handleErrors","response","ok","Error","statusText"],"mappings":"AAAA,SAAQA,kBAAR,EAA4BC,oBAA5B,EAAiDC,oBAAjD,QAA6E,kBAA7E;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR,CADiB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAdC;AAgBH,C,CAEC;;AACA,SAASK,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,SAAOH,QAAP;AACD","sourcesContent":["import {fetchProductsBegin, fetchProductsSuccess,fetchProductsFailure } from './productActions';\n\nexport function fetchProducts() {\n    return dispatch => {\n      dispatch(fetchProductsBegin());\n      \n    //   return fetch(\"/products\")\n    //     .then(handleErrors)\n    //     .then(res => res.json())\n    //     .then(json => {\n    //       dispatch(fetchProductsSuccess(json.products));\n    //       return json.products;\n    //     })\n    //     .catch(error => dispatch(fetchProductsFailure(error)));\n    // };\n    // return dispatch(fetchProductsSuccess(['h','c','j']));;\n    \n  }\n  \n}\n  \n  // Handle HTTP errors since fetch won't.\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }"]},"metadata":{},"sourceType":"module"}